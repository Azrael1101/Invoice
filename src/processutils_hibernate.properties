######################
### Query Language ###
######################

## define query language constants / function names

hibernate.query.substitutions true 1, false 0, yes 'Y', no 'N'

## package imports

hibernate.query.imports net.sf.hibernate.test, net.sf.hibernate.eg
hibernate.connection.datasource CEAPDS
hibernate.dialect net.sf.hibernate.dialect.Oracle9Dialect

#################################
### Plugin ConnectionProvider ###
#################################

hibernate.connection.provider_class net.sf.hibernate.connection.DatasourceConnectionProvider

#######################
### Transaction API ###
#######################

hibernate.transaction.factory_class net.sf.hibernate.transaction.JTATransactionFactory
jta.UserTransaction javax.transaction.UserTransaction
hibernate.transaction.manager_lookup_class net.sf.hibernate.transaction.JBossTransactionManagerLookup

##############################
### Miscellaneous Settings ###
##############################

## print all generated SQL to the console

hibernate.show_sql false

## specify a JDBC isolation level

#hibernate.connection.isolation 4

## set the JDBC fetch size

#hibernate.jdbc.fetch_size 25

## set the maximum JDBC 2 batch size (a nonzero value enables batching)

hibernate.jdbc.batch_size 0

## enable use of JDBC 2 scrollable ResultSets (specifying a Dialect will cause Hibernate to use a sensible default)

#hibernate.jdbc.use_scrollable_resultset true

## use streams when writing binary types to / from JDBC

hibernate.jdbc.use_streams_for_binary true

## specify a default schema for unqualified tablenames

#hibernate.default_schema test

## use a custom stylesheet for XML generation (if not specified, hibernate-default.xslt will be used)

#hibernate.xml.output_stylesheet C:/Hibernate/net/sf/hibernate/hibernate-default.xslt

## enable outerjoin fetching (specifying a Dialect will cause Hibernate to use sensible default)

#hibernate.use_outer_join false

## enable CGLIB reflection optimizer (enabled by default)

#hibernate.cglib.use_reflection_optimizer false

##########################
### Second-level Cache ###
##########################

## optimize chache for minimal "puts" instead of minimal "gets" (good for clustered cache)

#hibernate.cache.use_minimal_puts true


## enable the query cache

hibernate.cache.use_query_cache true


## choose a cache implementation

hibernate.cache.provider_class net.sf.hibernate.cache.EhCacheProvider
#hibernate.cache.provider_class net.sf.hibernate.cache.EmptyCacheProvider
#hibernate.cache.provider_class net.sf.hibernate.cache.HashtableCacheProvider
#hibernate.cache.provider_class net.sf.hibernate.cache.TreeCacheProvider
#hibernate.cache.provider_class net.sf.hibernate.cache.OSCacheProvider
#hibernate.cache.provider_class net.sf.hibernate.cache.JCSCacheProvider
#hibernate.cache.provider_class net.sf.hibernate.cache.SwarmCacheProvider


############
### JNDI ###
############

## specify a JNDI name for the SessionFactory

#hibernate.session_factory_name hibernate/session_factory


## Hibernate uses JNDI to bind a name to a SessionFactory and to look up the JTA UserTransaction;
## if hibernate.jndi.* are not specified, Hibernate will use the default InitialContext() which
## is the best approach in an application server

#Weblogic
#hibernate.jndi.class weblogic.jndi.WLInitialContextFactory
#hibernate.jndi.url t3://localhost:7001

#WebSphere
#hibernate.jndi.class com.ibm.websphere.naming.WsnInitialContextFactory
#hibernate.jndi.url iiop://localhost:900/
